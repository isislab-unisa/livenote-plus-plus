(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else {
		var a = factory();
		for(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];
	}
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./public/master/livenote-master.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./public/master/livenote-master.js":
/*!******************************************!*\
  !*** ./public/master/livenote-master.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("console.log('%cAre you looking for bugs? Join us on https://discord.gg/BTt5fUp', 'color: red; font-size: x-large');\n\n// hide elements on the view\nfunction hidecontrol(){\n  $(\".control\").each(function (index, element) {\n    hide = $(element).is(':hidden');\n\n    if($(element).attr('id') ==\"select-audio\" || $(element).attr('id') ==\"select-video\")\n    {\n      if($(\"#startlive\").hasClass('nes-logo')){\n        $(element).hide()     \n      }\n    } else{\n      if(!hide){\n        $(element).hide()     \n      }else {\n        $(element).show()\n      }\n    }\n  });\n}\n\n// Move to prev page of presentation\nconst showPrevPage = () => {\n  if (pageNum <= 1) {\n    return;\n  }\n  pageNum--;\n  (pmode == 0) && sendMasterStatus(pageNum);\n  queueRenderPage(pageNum);\n  document.getElementById(\"progress-bar\").setAttribute(\"value\", pageNum);\n};\n\n// Move to next page of presentation\nconst showNextPage = () => {\n  if (pageNum >= pdfDoc.numPages) {\n    return;\n  }\n  pageNum++;\n  (pmode == 0) && sendMasterStatus(pageNum);\n  queueRenderPage(pageNum);\n  document.getElementById(\"progress-bar\").setAttribute(\"value\", pageNum);\n\n};\n\n// Notify all client that page of presentation has changed\nfunction sendMasterStatus(pageNum){\n  status.nslide = pageNum;\n  //console.log(socket);\n  socket.emit(\"master\", JSON.stringify(status), function (data) {      \n    console.log('Message next page sent! '+ status.nslide);\n  }); \n}\n\n// Switch page with arrow keys\ndocument.onkeydown = function(e) {\n  switch (e.keyCode) {\n    //left arrow\n    case 37:\n      showPrevPage();\n      break;\n    //up arrow\n    case 38:\n      break;\n    //right arrow\n    case 39:\n      showNextPage();\n      break;\n    //down arrow\n    case 40:\n      break;\n  }\n}\n\n// Button Events\ndocument.querySelector('#prev-page').addEventListener('click', showPrevPage);\ndocument.querySelector('#next-page').addEventListener('click', showNextPage);\n\n\ndocument.querySelector(\"#addOptionMultiple\").addEventListener(\"click\",addOptionMultiple);\n\n// Render the current page\nfunction loadStatus(s){\n  status = s\n  queueRenderPage(s.nslide);\n}\n\n/*\nAUDIO VIDEO\nManage the connection audio/video for client/master\nTurn server\n*/\nconst peerConnections = {};\nconst config = {\n  iceServers: [\n    {\n      urls: [\n      \"stun:isiswork01.di.unisa.it\"]\n    }\n  ]\n};\n\nwindow.onunload = window.onbeforeunload = () => {\n  console.log(\"Close socket\")\n  socket.close();\n};\n\nif (document.getElementById(\"video\") != undefined )\ndocument.getElementById(\"video\").addEventListener('click', function(event){\n//<img src=\"https://img.icons8.com/color/48/000000/record.png\"/>  \n//<img src=\"https://img.icons8.com/color/48/000000/stop.png\"/>   \n});\nif (document.getElementById(\"audio\") != undefined )\ndocument.getElementById(\"audio\").addEventListener('click', function(event){\n//https://img.icons8.com/color/48/000000/play-record.png\n//<img src=\"https://img.icons8.com/color/48/000000/block-microphone.png\"/>  \n});\n\nvar socket;\nvar counter=0;\nvar countFilesIMGMaster=0;\n\n/*\nFunction called on load of html page\nSet the connection to the socket with with right name\nSee the description on server.js for the different messages on socket\nthe export is needed for the webpack module\n*/\nmodule.exports = {\n  initmaster: function (namespace) {\n    //console.log(\"Connect to \"+window.location.origin+namespace)\n    socket = io.connect(window.location.origin+namespace, {\n      reconnection: true,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax : 5000,\n      reconnectionAttempts: 99999\n    });\n  \n    socket.on(\"client_connected\", (status) => {\n      if(status) {\n        counter++\n        document.getElementById(\"counter\").innerHTML = counter;\n        socket.emit(\"counter\", counter);\n      }\n    });\n  \n    socket.on(\"client_disconnected\", (status) => {\n      if(status) {\n        if (counter > 0)\n          counter--\n        document.getElementById(\"counter\").innerHTML = counter;\n        socket.emit(\"counter\", counter);\n      }\n    });\n  \n    socket.on(\"answer\", (id, description) => {\n      peerConnections[id].setRemoteDescription(description);\n    });\n    \n    socket.on(\"watcher\", id => {\n      const peerConnection = new RTCPeerConnection(config);\n      peerConnections[id] = peerConnection;\n    \n      let stream = videoElement.srcObject;\n      stream.getTracks().forEach(track => peerConnection.addTrack(track, stream));\n    \n      peerConnection.onicecandidate = event => {\n        if (event.candidate) {\n          socket.emit(\"candidate\", id, event.candidate);\n        }\n      };\n    \n      peerConnection\n        .createOffer()\n        .then(sdp => peerConnection.setLocalDescription(sdp))\n        .then(() => {\n          socket.emit(\"offer\", id, peerConnection.localDescription);\n        });\n  \n    });\n    \n    socket.on(\"candidate\", (id, candidate) => {\n      peerConnections[id].addIceCandidate(new RTCIceCandidate(candidate));\n    });\n    \n    socket.on(\"disconnectPeer\", id => {\n    peerConnections[id].close();\n    delete peerConnections[id];\n  });\n\n    //aggiornamento sondaggio \n    socket.on(\"updatingPoll\",(optionPoll,countPersonAnswered)=>{\n    updatePollOpenDynamical(optionPoll.optionChecked,optionPoll.value,countPersonAnswered);\n    });\n\n    socket.on(\"updatingPollRanking\",(vote,countPersonAnswered)=>{\n      updatePollRankingDynamical(vote,countPersonAnswered);\n    });\n\n    socket.on(\"createPollRanking\",(data,countPeopleInLive)=>{\n      getPollDynamicalRanking(data,countPeopleInLive); \n    });\n\n    socket.on(\"createPollMultiple\",(data,countPeople)=>{\n      getPollDynamicalMultiple(data,countPeople); \n    });\n\n    socket.on(\"getCountFiles\",(countFilesIMG)=>{\n      countFilesIMGMaster=countFilesIMG;\n    });\n    \n    socket.on(\"getPollRanking\",(datePoll,countPeople)=>{\n      hideBottonCreatePoll();\n      getPollDynamicalRanking(datePoll,countPeople);\n    });\n\n    socket.on(\"getPollMultiple\",(datePoll,countPeople)=>{\n      hideBottonCreatePoll();\n      getPollDynamicalMultiple(datePoll,countPeople);\n    });\n\n    socket.emit(\"getFileIMG\");\n    \n\n    // Get camera and microphone\n    const videoElement = document.querySelector(\"video\");\n    const audioSelect = document.querySelector(\"select#audioSource\");\n    const videoSelect = document.querySelector(\"select#videoSource\");\n  \n    audioSelect.onchange = getStream;\n    videoSelect.onchange = getStream;\n  \n    function gotDevices(deviceInfos) {\n      window.deviceInfos = deviceInfos;\n      for (const deviceInfo of deviceInfos) {\n        const option = document.createElement(\"option\");\n        option.value = deviceInfo.deviceId;\n        if (deviceInfo.kind === \"audioinput\") {\n          option.text = deviceInfo.label || `Microphone ${audioSelect.length + 1}`;\n          audioSelect.appendChild(option);\n        } else if (deviceInfo.kind === \"videoinput\") {\n          option.text = deviceInfo.label || `Camera ${videoSelect.length + 1}`;\n          videoSelect.appendChild(option);\n        }\n      }\n    }\n      \n    function getStream() {\n      if (window.stream) {\n        window.stream.getTracks().forEach(track => {\n          track.stop();\n        });\n      }\n      const audioSource = audioSelect.value;\n      const videoSource = videoSelect.value;\n      const constraints = {\n        audio: { deviceId: audioSource ? { exact: audioSource } : undefined },\n        video: { deviceId: videoSource ? { exact: videoSource } : undefined }\n      };\n      return navigator.mediaDevices\n        .getUserMedia(constraints)\n        .then(gotStream)\n        .catch(handleError);\n    }\n\n    //DETACH AUDIO\n    const stopaudioButton = document.getElementById('vol');\n    var openaudio = true;\n    stopaudioButton.addEventListener('click', function() {\n        if (openaudio) {\n          navigator.mediaDevices.getUserMedia({ audio: false, video: true })\n            .then(gotStreamNoAudio)\n            .catch(err=>{ \n              console.log(err) \n            })\n          openaudio = false;\n        } else {\n          getStream()\n          .then(getDevices)\n          openaudio = true;\n          function getDevices() {\n            $('#startlive').removeClass(\"nes-logo\");\n            $('#liveperson').show();\n            $('#select-audio').show();\n            $('#select-video').show();\n            \n            // $('#startlive').addClass(\"nes-mario\");\n            return navigator.mediaDevices.enumerateDevices();\n          }\n        }\n    });\n\n    function gotStreamNoAudio(stream) {\n      window.stream = stream;\n      videoSelect.selectedIndex = [...videoSelect.options].findIndex(\n        option => option.text === stream.getVideoTracks()[0].label\n      );\n      videoElement.srcObject = stream;\n      socket.emit(\"broadcaster\");\n    }\n\n    //DETACH VIDEO\n    const stopvideoButton = document.getElementById('playvideo');\n    var openvideo = true;\n    stopvideoButton.addEventListener('click', function() {\n      if (openvideo) {\n        navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n          .then(gotStreamNoVideo)\n          .catch(err=>{ \n            console.log(err) \n          })\n        openvideo = false;\n      } else {\n        getStream()\n        .then(getDevices)\n        openvideo = true;\n        function getDevices() {\n          $('#startlive').removeClass(\"nes-logo\");\n          $('#liveperson').show();\n          $('#select-audio').show();\n          $('#select-video').show();\n          // $('#startlive').addClass(\"nes-mario\");\n          return navigator.mediaDevices.enumerateDevices();\n        }\n      }\n    });\n\n    function gotStreamNoVideo(stream) {\n      window.stream = stream;\n      audioSelect.selectedIndex = [...audioSelect.options].findIndex(\n        option => option.text === stream.getAudioTracks()[0].label\n      );\n      videoElement.srcObject = stream;\n      socket.emit(\"broadcaster\");\n    }\n      \n    function gotStream(stream) {\n      window.stream = stream;\n      audioSelect.selectedIndex = [...audioSelect.options].findIndex(\n        option => option.text === stream.getAudioTracks()[0].label\n      );\n      videoSelect.selectedIndex = [...videoSelect.options].findIndex(\n        option => option.text === stream.getVideoTracks()[0].label\n      );\n      videoElement.srcObject = stream;\n      socket.emit(\"broadcaster\");\n    }\n  \n    function handleError(error) {\n      console.error(\"Error: \", error);\n    }\n  \n    function startLive(){\n      /*var dial = document.getElementById('dialog-play')\n      if (typeof dial.showModal === \"function\") {\n        dial.showModal();\n      } else {\n        alert(\"The <dialog> API is not supported by this browser\");\n      }\n      */\n      $('#play').click( function()\n        { \n          getStream()\n          .then(getDevices)\n          .then(gotDevices);\n          function getDevices() {\n            $('#startlive').removeClass(\"nes-logo\");\n            $('#liveperson').show();\n            $('#select-audio').show();\n            $('#select-video').show();\n            \n            // $('#startlive').addClass(\"nes-mario\");\n            return navigator.mediaDevices.enumerateDevices();\n          }\n        }\n      );\n    }\n  \n    $('#startlive').click( function() {\n      startLive();\n    });\n      \n    $(document).keydown(function(e){\n      if(e.ctrlKey && e.altKey && e.keyCode == 76){\n        startLive();\n          //CTRL + ALT + l keydown combo\n      }\n    });\n  \n    // When the master click il botton send, the poll is sent to server. After that, the server will send at the other users\n    $('#createPoll').click(function(){\n      var selectPoll=$('input[name=\"choicePoll\"]:checked').val();\n      var res;\n      if(selectPoll==\"multiple\"){\n        // poll ranking\n        res=validatePoll();\n        \n      }\n      else if(selectPoll==\"ranking\"){\n        //poll multiple\n        res=validatePoll();\n      }\n\n      if(res==true){\n        $('#dialog-sondaggio').modal(\"hide\");\n\n        if(selectPoll==\"multiple\")\n          createJSONPollMultiple();\n        else if(selectPoll==\"ranking\")\n          createJSONRanking();\n      }\n    });\n\n    // When the master click il botton close poll, the server will notifier at the other users that the poll has been closed\n    $(\"#close-poll\").click(function(){\n      document.getElementById(\"create-poll\").style.display=\"inline\";\n      document.getElementById(\"viewPollDynamical\").style.display=\"none\";\n      // countPersonAnswer=0;\n\n      $(\"#pollDynamical\").empty();\n\n      socket.emit(\"closePoll\");\n    });\n\n    initServices(socket);\n  },\n  \n  //Creation dynamical of the poll, based on the poll mode selection\n  changeQuestions:function(element){\n    var question=element.value;\n\n    if(question==\"ranking\"){\n      idOption=1;\n      createRanking();\n    }\n    else if(question==\"multiple\"){\n      idOption=1;\n      createMultipleQuestions();\n    }\n  },\n\n  // Delete an option specified\n  deleteOption:function(element){\n    var testo=element.id+\"DIV\";\n\n  var divOptionRemove=document.getElementById(`${testo}`);\n\n  divOptionRemove.remove();\n  }\n};\n\n// Check if the fields are empty. If so, it will view a messagge of error.\nfunction validatePoll(){\n  \n  var res=true;\n  $(\"#sondaggio\").find(\"input\").each(function(){\n    if($(this).val()==\"\"){\n      $(this).attr(\"class\",\"nes-input is-error\"); \n      $(this).next().css(\"display\",\"block\");\n      res=false;\n    }\n    else if($(this).hasClass(\"nes-input is-error\")){\n      $(this).attr(\"class\",\"nes-input\").next().hide(); \n    }\n  });\n\n  return res;\n}\n\n//Hide the button of createPoll when the master click the button send. \nfunction hideBottonCreatePoll(){\n  document.getElementById(\"create-poll\").style.display=\"none\";\n}\n\n\n// create a poll multiple\nfunction createMultipleQuestions(){\n  \n  var divOptionPoll=document.getElementById(\"sondaggio\");\n\n  while(divOptionPoll.lastElementChild){\n    divOptionPoll.removeChild(divOptionPoll.lastElementChild);\n  }\n  \n   \n\n  var titleQuestion=document.createElement(\"h5\");\n  titleQuestion.setAttribute(\"class\",\"modal-title\");\n  var textQuestion=document.createTextNode(\"Create a question\");\n  titleQuestion.appendChild(textQuestion);\n\n  var inputQuestion=document.createElement(\"input\");\n  inputQuestion.setAttribute(\"type\",\"text\");\n  inputQuestion.setAttribute(\"class\",\"nes-input\");\n  inputQuestion.setAttribute(\"name\",\"namePoll\");\n  inputQuestion.setAttribute(\"placeholder\",\"Insert a question\");\n\n  var spanErrorQuestion=document.createElement(\"span\");\n  spanErrorQuestion.appendChild(document.createTextNode(\"You haven't inserted a question\"));\n  spanErrorQuestion.setAttribute(\"class\",\"errorPoll\");\n  \n  var hrTag=document.createElement(\"hr\");\n\n  var tableDiv=document.createElement(\"div\");\n  tableDiv.setAttribute(\"id\",\"tableOption\");\n\n  var titleOption=document.createElement(\"h5\");\n  titleOption.setAttribute(\"class\",\"modal-title\");\n  var textOption=document.createTextNode(\"Create some options\");\n  titleOption.appendChild(textOption);\n\n\n\n  var divOtherOption=document.createElement(\"div\");\n  divOtherOption.setAttribute(\"class\",\"div-delete-option\");\n  divOtherOption.setAttribute(\"id\",\"option1DIV\");\n\n  var inputOptionPoll=document.createElement(\"input\");\n  inputOptionPoll.setAttribute(\"type\",\"text\");\n  inputOptionPoll.setAttribute(\"name\",\"pollOption\");\n  inputOptionPoll.setAttribute(\"class\",\"nes-input\");\n  inputOptionPoll.setAttribute(\"placeholder\",\"Insert an option\");\n\n  var spanErrorOption=document.createElement(\"span\");\n  spanErrorOption.appendChild(document.createTextNode(\"You haven't inserted an option\"));\n  spanErrorOption.setAttribute(\"class\",\"errorPoll\");\n\n\n\n\n  var buttonAdd=document.createElement(\"button\");\n  buttonAdd.setAttribute(\"type\",\"button\");\n  buttonAdd.setAttribute(\"class\",\"nes-btn\");\n  buttonAdd.setAttribute(\"id\",\"addOptionMultiple\");\n\n  var textNode=document.createTextNode(\"Add an option\");\n\n  buttonAdd.addEventListener(\"click\",addOptionMultiple);\n\n  buttonAdd.appendChild(textNode);\n\n  divOtherOption.appendChild(inputOptionPoll);\n  divOtherOption.appendChild(spanErrorOption);\n\n  tableDiv.appendChild(divOtherOption);\n\n  divOptionPoll.appendChild(titleQuestion);\n  divOptionPoll.appendChild(inputQuestion);\n  divOptionPoll.appendChild(spanErrorQuestion);\n\n  divOptionPoll.appendChild(hrTag);\n\n  divOptionPoll.appendChild(titleOption);\n\n  divOptionPoll.appendChild(tableDiv);\n  divOptionPoll.appendChild(buttonAdd);\n\n}\n\n// create a ranking poll\nfunction createRanking(){\n  var divOptionPoll=document.getElementById(\"sondaggio\");\n\n  while(divOptionPoll.lastElementChild){\n    divOptionPoll.removeChild(divOptionPoll.lastElementChild);\n  }\n  \n  \n  var divDeletePoll=document.createElement(\"div\");\n  divDeletePoll.setAttribute(\"class\",\"div-delete-option\");\n  divDeletePoll.setAttribute(\"id\",\"option1DIV\");\n\n  var titleCreateQuestion=document.createElement(\"h5\");\n  titleCreateQuestion.appendChild(document.createTextNode(\"Create a question\"));\n  \n  var inputQuestionPoll=document.createElement(\"input\");\n  inputQuestionPoll.setAttribute(\"type\",\"text\");\n  inputQuestionPoll.setAttribute(\"name\",\"pollQuestion\");\n  inputQuestionPoll.setAttribute(\"class\",\"nes-input\");\n  inputQuestionPoll.setAttribute(\"placeholder\",\"Insert a question\");\n\n  var brTag=document.createElement(\"br\");\n\n  var spanError=document.createElement(\"span\");  \n  spanError.appendChild(document.createTextNode(\"You haven't inserted a question\"));\n  spanError.setAttribute(\"class\",\"errorPoll\");\n\n\n  var titleRank=document.createElement(\"h5\");\n  titleRank.appendChild(document.createTextNode(\"Select a rank\"));\n\n  var containerSelectRank=document.createElement(\"div\");\n  containerSelectRank.setAttribute(\"class\",\"container-select nes-input\");\n\n  for(var i=1;i<countFilesIMGMaster+1;i++){\n    var label=document.createElement(\"label\");\n    var radioRank=document.createElement(\"input\");\n    radioRank.setAttribute(\"type\",\"radio\");\n    radioRank.setAttribute(\"name\",\"rank1\");\n    radioRank.setAttribute(\"value\",\"rankIMG\"+i)\n    radioRank.setAttribute(\"style\",\"-webkit-appearance: none;\")\n\n    if(i==1)\n      radioRank.setAttribute(\"checked\",\"checked\");\n\n    var img=document.createElement(\"img\");\n    img.setAttribute(\"src\",`../img/rankIcon/rankIMG${i}.png`);\n    img.setAttribute(\"class\",\"rankIcon\");\n\n    label.appendChild(radioRank);\n    label.appendChild(img);\n    \n\n    containerSelectRank.appendChild(label);\n  }\n  var buttonAdd=document.createElement(\"button\");\n  buttonAdd.setAttribute(\"type\",\"button\");\n  buttonAdd.setAttribute(\"class\",\"nes-btn\");\n  buttonAdd.setAttribute(\"id\",\"addQuestionRank\");\n  buttonAdd.addEventListener(\"click\",addQuestionRank);\n  buttonAdd.appendChild(document.createTextNode(\"Add a question\"));\n\n  \n  divDeletePoll.appendChild(titleCreateQuestion);\n  divDeletePoll.appendChild(inputQuestionPoll);\n  divDeletePoll.appendChild(spanError);\n  divDeletePoll.appendChild(brTag);\n  divDeletePoll.appendChild(titleRank);\n  divDeletePoll.appendChild(containerSelectRank);\n\n  \n  divOptionPoll.appendChild(divDeletePoll);\n  divOptionPoll.appendChild(brTag);\n  divOptionPoll.appendChild(buttonAdd);\n\n}\n\n// insert an option in the multiple poll\nvar idOption=1; // variable used to set id of the div. So we know excalty which the master wants to eliminate an option \nfunction addOptionMultiple(){\n  \n  //$('#sondaggio').append('<input type=\"text\" class=\"nes-input\" placeholder=\"insert an option\"/>');\n  var tableDiv=document.getElementById(\"tableOption\");\n  idOption++;\n\n\n  var divInput=document.createElement(\"div\");\n  divInput.setAttribute(\"class\",\"div-delete-option\");\n  divInput.setAttribute(\"id\",`option${idOption}DIV`);\n\n  var input=document.createElement(\"input\");\n  input.setAttribute(\"type\",\"text\");\n  input.setAttribute(\"name\",\"pollOption\");\n  input.setAttribute(\"placeholder\",\"Insert an option\");\n  input.setAttribute(\"class\",\"nes-input\");\n\n  var iconX=document.createElement(\"i\");\n  iconX.setAttribute(\"class\",\"delete-option-multiple nes-icon close is-small\");\n  iconX.setAttribute(\"id\",`option${idOption}`);\n  iconX.setAttribute(\"onclick\",\"deleteOption(this)\");\n\n  var spanError=document.createElement(\"span\");  \n  spanError.appendChild(document.createTextNode(\"You haven't inserted a option\"));\n  spanError.setAttribute(\"class\",\"errorPoll\");\n\n  divInput.appendChild(input);\n  divInput.appendChild(spanError);\n  divInput.appendChild(iconX);\n  \n  tableDiv.appendChild(divInput);\n\n};\n\n// create an anther ranking poll\nfunction addQuestionRank(){\n  \n  \n  var listInput=document.getElementById(\"sondaggio\");\n\n  idOption++;\n\n  var divInput=document.createElement(\"div\");\n  divInput.setAttribute(\"class\",\"div-delete-option\");\n  divInput.setAttribute(\"id\",`option${idOption}DIV`);\n\n  var titleCreateQuestion=document.createElement(\"h5\");\n  var textCreateQuestion=document.createTextNode(\"Create a question\");\n  titleCreateQuestion.appendChild(textCreateQuestion);\n\n  var inputQuestion=document.createElement(\"input\");\n  inputQuestion.setAttribute(\"type\",\"text\");\n  inputQuestion.setAttribute(\"name\",`pollQuestion`);\n  inputQuestion.setAttribute(\"placeholder\",\"Insert a question\");\n  inputQuestion.setAttribute(\"class\",\"nes-input\");\n\n  var spanError=document.createElement(\"span\");\n  spanError.appendChild(document.createTextNode(\"You haven't insert a question\"));\n  spanError.setAttribute(\"class\",\"errorPoll\");\n\n  var brTag1=document.createElement(\"br\");\n\n  var spanRank=document.createElement(\"h5\");\n  spanRank.appendChild(document.createTextNode(\"Select a rank\"));\n\n  var containerSelectRank=document.createElement(\"div\");\n  containerSelectRank.setAttribute(\"class\",\"container-select nes-input\");\n\n  for(var i=1;i<countFilesIMGMaster+1;i++){\n    var label=document.createElement(\"label\");\n    var radioRank=document.createElement(\"input\");\n    radioRank.setAttribute(\"type\",\"radio\");\n    radioRank.setAttribute(\"name\",\"rank\"+idOption);\n    radioRank.setAttribute(\"value\",\"rankIMG\"+i)\n    radioRank.setAttribute(\"style\",\"-webkit-appearance: none;\")\n    if(i==1)\n      radioRank.setAttribute(\"checked\",\"checked\");\n\n    var img=document.createElement(\"img\");\n    img.setAttribute(\"src\",`../img/rankIcon/rankIMG${i}.png`);\n    img.setAttribute(\"class\",\"rankIcon\");\n\n    label.appendChild(radioRank);\n    label.appendChild(img);\n    \n\n    containerSelectRank.appendChild(label);\n  }\n\n  var iconX=document.createElement(\"i\");\n  iconX.setAttribute(\"class\",\"delete-option-ranking nes-icon close is-small\");\n  iconX.setAttribute(\"id\",`option${idOption}`);\n  iconX.setAttribute(\"onclick\",\"deleteOption(this)\");\n\n  divInput.appendChild(document.createElement(\"hr\"));\n  divInput.appendChild(titleCreateQuestion);\n  divInput.appendChild(inputQuestion);\n  divInput.appendChild(spanError);\n  divInput.appendChild(spanRank);\n  divInput.appendChild(containerSelectRank);\n  divInput.appendChild(iconX);\n\n  listInput.insertBefore(divInput,listInput.childNodes[listInput.childNodes.length-2]);      \n}\n\n// create a JSON that containing date of the multiple poll, as a question , some options.\nfunction createJSONPollMultiple(){\n  var jsonOptionInput=[];\n  var jsonValoriOption={}\n  \n  $('input[name=\"pollOption\"]').map(function(){\n    \n    jsonOptionInput.push(this.value);\n    jsonValoriOption[this.value]=0;\n  });\n\n\n  var jsonOptionString=JSON.stringify(jsonOptionInput);\n  var jsonValoriOptionString=JSON.stringify(jsonValoriOption);\n  \n\n  var namePoll=$('input[name=\"namePoll\"]').val();\n  \n  var jsonFinalDatiString=`{\"namePoll\":\"${namePoll}\",\"optionPoll\":${jsonOptionString},\"valueOption\":${jsonValoriOptionString},\"typePoll\":0}`;\n  \n\n  socket.emit(\"createPollMultiple\",jsonFinalDatiString);\n}\n\n// create a JSON that containing date of the ranking poll, as a question , emoticons selected\nfunction createJSONRanking(){\n  var datePoll={\n    questions_rightanswer:[],\n    value_question_rank:{},\n    typePoll:1\n  };\n\n  $(\".div-delete-option\").map(function(){\n    var valueQuestion=$(this).children('input[name=\"pollQuestion\"]').val();\n    var selectRank=$(this).find('input[type=radio]:checked').val();\n\n    var valueRankName=$(this).find('input[type=radio]:checked').attr(\"name\");\n\n    datePoll.questions_rightanswer.push({\n      question: valueQuestion,\n      select_rank:valueRankName,\n      select_rankIMG:selectRank\n\n    });\n\n    for(var i=1;i<5;i++){\n      datePoll.value_question_rank[`${valueRankName}_${i}`]=0;\n    }\n\n  });\n\n  var jsonStringPollRanking=JSON.stringify(datePoll);\n\n  socket.emit(\"createPollRanking\",jsonStringPollRanking);\n}\n\n\n\n//# sourceURL=webpack:///./public/master/livenote-master.js?");
/***/ })

/******/ });
});